{
    "swagger": "2.0",
    "info": {
        "description": "Backend APIs for ETix",
        "version": "1.0.5",
        "title": "ETix API Reference",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "paccy7002@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "localhost:5000",
    "basePath": "/",
    "tags": [
        {
            "name": "route",
            "description": "Everything about our routes",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://swagger.io"
            }
        },
        {
            "name": "auth",
            "description": "Auth APIs"
        },
        {
            "name": "user",
            "description": "Operations about user",
            "externalDocs": {
                "description": "Find out more about our store",
                "url": "http://swagger.io"
            }
        }
    ],
    "schemes": [
        "http"
    ],
    "paths": {
        "/api/routes": {
            "post": {
                "tags": [
                    "route"
                ],
                "summary": "Save new transport route",
                "description": "Save new transport route",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Route object that needs to be added to the database",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Route"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "route"
                ],
                "summary": "Update existing Route",
                "description": "Update existing route",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Transport Route object that needs to be added to the database",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Route"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "route"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Finds all Transport Routes",
                "description": "All routes available in the system",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Route"
                            }
                        }
                    },
                    "404": {
                        "description": "No record found"
                    }
                }
            }
        },
        "/api/routes/{id}": {
            "get": {
                "tags": [
                    "route"
                ],
                "summary": "Find route by ID",
                "description": "Returns a single route",
                "operationId": "getRouteById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of transport route to return",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Route"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Route not found"
                    }
                }
            }
        },
        "/api/users": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Save new user",
                "description": "Save new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User object that needs to be added to the database",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Finds all users",
                "description": "All Users available in the system",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "404": {
                        "description": "No record found"
                    }
                }
            }
        },
        "/api/users/{email}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Find user by email",
                "description": "Returns a single user",
                "operationId": "getUserByEmail",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "email of user to return",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Invalid email supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/auth/jwt": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Login with jwt enabled",
                "description": "Login with jwt enabled",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Login object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/bcrypt": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Login with bcrypt enabled",
                "description": "Login with bcrypt enabled",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Login object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"

        }
    },
    "definitions": {
        "ApiResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "Token": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "Route": {
            "type": "object",
            "required": [
                "origin",
                "destination",
                "numberOfTickets",
                "transportCompany"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "origin": {
                    "type": "string",
                    "example": "NYABUGOGO"
                },
                "destination": {
                    "type": "string",
                    "example": "NYABIHU"
                },
                "distance": {
                    "type": "string",
                    "example": "150Km"
                },
                "duration": {
                    "type": "string",
                    "example": "3hr"
                },
                "numberOfTickets": {
                    "type": "number",
                    "example": "100"
                },
                "transportCompany": {
                    "type": "object",
                    "example": "VOLCANO"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "roles":{
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "Login": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}